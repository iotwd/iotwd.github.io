<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Cmdxy&#39;s Blog</title>
  
  <subtitle>偷得浮生半日闲，心情半佛半神仙。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://cmdxy.com/"/>
  <updated>2020-03-19T16:22:50.670Z</updated>
  <id>https://cmdxy.com/</id>
  
  <author>
    <name>Cmdxy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>python实现网站自动签到获取流量</title>
    <link href="https://cmdxy.com/posts/use-python-to-sign-in.html"/>
    <id>https://cmdxy.com/posts/use-python-to-sign-in.html</id>
    <published>2020-03-03T02:59:22.000Z</published>
    <updated>2020-03-19T16:22:50.670Z</updated>
    
    <content type="html"><![CDATA[<ul><li>前言</li></ul><p>前段时间注册了个网站，签到送流量，每天签到也够麻烦的，好像网上有这个代码，自己太懒就动手写个爬虫，放在服务器实现自动签到，刚好把看的爬虫拿来练练手。理论适用于相同源码搭建的平台。</p><a id="more"></a><h2 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h2><h3 id="抓包分析"><a href="#抓包分析" class="headerlink" title="抓包分析"></a>抓包分析</h3><p>实现自动签到首先需要进行抓包，弄清浏览器在做出相关动作时发送的请求，这里利用的抓包工具是Fiddler。</p><p>通过抓包可以得到用户在登录的时候所发送的请求地址与请求协议。</p><ul><li>登录：<ul><li>地址：<code>https://example.com/auth/login</code></li><li>协议：post</li></ul></li><li>签到：<ul><li>地址 <code>https://example.com/user/checkin</code></li><li>协议：post</li></ul></li></ul><h3 id="程序流程"><a href="#程序流程" class="headerlink" title="程序流程"></a>程序流程</h3><ul><li>导入工具包</li><li>构建请求报头</li><li>获取session值</li><li>模拟登录</li><li>完成签到任务</li></ul><h2 id="编写python代码"><a href="#编写python代码" class="headerlink" title="编写python代码"></a>编写python代码</h2><p>代码的编写比较容易，这里直接贴出代码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> urllib3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Check_in</span><span class="params">(emaill, passwd)</span>:</span></span><br><span class="line">    login = <span class="string">'https://example.com/auth/login'</span></span><br><span class="line">    <span class="comment"># 构建请求头</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">"User-Agent"</span>: <span class="string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.122 Safari/537.36"</span>,</span><br><span class="line">        <span class="string">"X-Requested-With"</span>: <span class="string">"XMLHttpRequest"</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># 登录地址</span></span><br><span class="line">    login_url = <span class="string">'https://example.com/auth/login'</span></span><br><span class="line">    <span class="comment"># 忽视verify = False的错误提示</span></span><br><span class="line">    requests.packages.urllib3.disable_warnings()</span><br><span class="line">    <span class="comment"># 使用Session，利用session发送get请求获得cookie</span></span><br><span class="line">    session = requests.Session()</span><br><span class="line">    html = session.get(login_url, verify=<span class="literal">False</span>, headers=headers).text</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">"email"</span>: emaill,</span><br><span class="line">        <span class="string">"passwd"</span>: passwd,</span><br><span class="line">        <span class="string">"code"</span>: <span class="string">""</span></span><br><span class="line">    &#125;</span><br><span class="line">    requests.packages.urllib3.disable_warnings()</span><br><span class="line">    <span class="comment">#登录到该网页</span></span><br><span class="line">    req = session.post(login_url, data=data, verify=<span class="literal">False</span>, headers=headers)</span><br><span class="line">    <span class="comment"># 签到地址</span></span><br><span class="line">    check_in = <span class="string">'https://example.com/user/checkin'</span></span><br><span class="line">    req = session.post(check_in, headers=headers)</span><br><span class="line">    print(<span class="string">"用户"</span> + emaill + <span class="string">"签到成功"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">users = [&#123;</span><br><span class="line">    <span class="string">"email"</span>: <span class="string">"emaill1@qq.com"</span>,</span><br><span class="line">    <span class="string">"passwd"</span>: <span class="string">"password"</span></span><br><span class="line">&#125;, &#123;</span><br><span class="line">    <span class="string">"email"</span>: <span class="string">"emaill2@163.com"</span>,</span><br><span class="line">    <span class="string">"passwd"</span>: <span class="string">"password"</span></span><br><span class="line">&#125;]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> user <span class="keyword">in</span> users:</span><br><span class="line">    print(user[<span class="string">'email'</span>], user[<span class="string">'passwd'</span>])</span><br><span class="line">    Check_in(user[<span class="string">'email'</span>], user[<span class="string">'passwd'</span>])</span><br></pre></td></tr></table></figure><ul><li><strong>注意</strong><br>在发送请求的时候有个坑，因为浏览器访问该网页时需要设置证书，如果在发送请求时不设置会出现如下的错误：<figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">OpenSSL.SSL.Error</span>: [('SSL routines', 'tls_process_server_certificate', 'certificate verify failed')]</span><br><span class="line"></span><br><span class="line"><span class="attribute">urllib3.exceptions.MaxRetryError</span>: HTTPSConnectionPool(host='example.com', port=443): Max retries exceeded with url: /auth/login (Caused by SSLError(SSLError("bad handshake: Error([('SSL routines', 'tls_process_server_certificate', 'certificate verify failed')])")))</span><br><span class="line"></span><br><span class="line"><span class="attribute">requests.exceptions.SSLError</span>: HTTPSConnectionPool(host='example.com', port=443): Max retries exceeded with url: /auth/login (Caused by SSLError(SSLError("bad handshake: Error([('SSL routines', 'tls_process_server_certificate', 'certificate verify failed')])")))</span><br></pre></td></tr></table></figure></li></ul><p>解决办法：<br>将<code>session.post(login_url, data=data, verify=False, headers=headers)</code>中的Verify需要设置为False,默认是True</p><p>我们可以在send函数看到默认值是True<br><code>def send(self, request, stream=False, timeout=None, verify=True, cert=None, proxies=None):</code></p><p>在将verify设置为False后，运行程序虽然可以签到成功，但是会出现一个警告：<br><code>InsecureRequestWarning: Unverified HTTPS request is being made to host &#39;127.0.0.1&#39;. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings  InsecureRequestWarning</code></p><p>我们可以在请求前添加一句代码：<code>requests.packages.urllib3.disable_warnings()</code>来忽略警告。</p><h2 id="设置定时任务"><a href="#设置定时任务" class="headerlink" title="设置定时任务"></a>设置定时任务</h2><p>定时任务可以放到服务器上自己执行，如果没有服务器，放在Linux电脑上也可以。</p><p>设置定时任务用到的是crontabs服务。</p><h3 id="编辑任务"><a href="#编辑任务" class="headerlink" title="编辑任务"></a>编辑任务</h3><p>执行<code>crontab -e</code></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># m h dom mon dow command</span></span><br><span class="line"><span class="section"># 定时执行python脚本，输出log,每天八点半执行一次</span></span><br><span class="line">30 8 <span class="emphasis">* *</span> * python /home/test.py &gt; /tmp/test<span class="emphasis">_cron_</span>log.txt 2&gt;&amp;1 &amp;</span><br><span class="line"><span class="section"># 定时执行shell命令</span></span><br><span class="line"><span class="bullet">* </span><span class="emphasis">* *</span> <span class="emphasis">* *</span> echo "Hello world!" &gt;&gt; /tmp/test<span class="emphasis">_cron_</span>log.txt</span><br><span class="line"><span class="section"># 定时执行shell脚本,test.sh需要有执行权限</span></span><br><span class="line"><span class="bullet">* </span><span class="emphasis">* *</span> <span class="emphasis">* *</span> /root/test.sh &gt;&gt; /tmp/test<span class="emphasis">_cron_</span>log.txt</span><br></pre></td></tr></table></figure><h3 id="查看任务"><a href="#查看任务" class="headerlink" title="查看任务"></a>查看任务</h3><p>执行<code>crontab -l</code>可以查看任务，此时会打开任务文件</p><p>每次编辑任务后，都需要使用service cron reload命令重载任务</p><h3 id="参数解释"><a href="#参数解释" class="headerlink" title="参数解释"></a>参数解释</h3><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># m h dom mon dow command</span><br><span class="line">crontab 文件的格式：</span><br><span class="line">&#123;minute&#125; &#123;hour&#125; &#123;day-of-month&#125; &#123;month&#125; &#123;day-of-week&#125; &#123;full-path-to-shell-script&#125; </span><br><span class="line">o minute: 区间为 <span class="number">0</span> – <span class="number">59</span> </span><br><span class="line">o hour: 区间为<span class="number">0</span> – <span class="number">23</span> </span><br><span class="line">o day-of-month: 区间为<span class="number">0</span> – <span class="number">31</span> </span><br><span class="line">o month: 区间为<span class="number">1</span> – <span class="number">12.</span> <span class="number">1</span> 是<span class="number">1</span>月. <span class="number">12</span>是<span class="number">12</span>月. </span><br><span class="line">o Day-of-week: 区间为<span class="number">0</span> – <span class="number">7.</span> 周日可以是<span class="number">0</span>或<span class="number">7.</span></span><br></pre></td></tr></table></figure><p>最后，启动一下服务，就可以去做别的事情了。</p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;前言&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;前段时间注册了个网站，签到送流量，每天签到也够麻烦的，好像网上有这个代码，自己太懒就动手写个爬虫，放在服务器实现自动签到，刚好把看的爬虫拿来练练手。理论适用于相同源码搭建的平台。&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="https://cmdxy.com/categories/python/"/>
    
    
      <category term="python" scheme="https://cmdxy.com/tags/python/"/>
    
      <category term="linux" scheme="https://cmdxy.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Introduce of iot</title>
    <link href="https://cmdxy.com/posts/introduce-of-iot.html"/>
    <id>https://cmdxy.com/posts/introduce-of-iot.html</id>
    <published>2020-03-01T14:25:58.000Z</published>
    <updated>2020-03-01T16:08:12.111Z</updated>
    
    <content type="html"><![CDATA[<ul><li>物联网：</li></ul><p>通过射频识别（RFID）装置、传感器、 全球定位系统等信息传感设备，按照约定的协议，把地球上的任何具体事物同互联网连接起来，并进行信息交换和通信，实现识别、定位、监控、控制和管理的一种网络。</p><a id="more"></a><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><ul><li>物：<ul><li>有相应的接收器</li><li>发送器</li><li>cpu</li><li>存储功能</li><li>操作系统</li><li>数据发送器</li><li>专门的应用程序</li></ul></li><li>联<ul><li>物物相连的互联网</li><li>众多传感设备连接起来并在广域网内今昔信息</li></ul></li><li>网<ul><li>基础和核心依旧是互联网，却远远超出互联网的范畴。</li></ul></li><li>IOT的三个特性<ul><li>不能简单看为互联网的延伸</li><li>伴随新的业务共同发展</li><li>包括不同的通信模式，强调M2M（man to machine |  machine to machi…. ）</li></ul></li></ul><h2 id="2-特征"><a href="#2-特征" class="headerlink" title="2. 特征"></a>2. 特征</h2><ul><li>全面感知 （核心）<ul><li>利用传感器、电子标签等环境的各个可测量特征 </li></ul></li><li>可靠传递<ul><li>数据传递的稳定性和可靠性</li><li>adhoc多跳上传数据</li><li>有线和无线</li><li>zigbee，lora，nbIot </li></ul></li><li>智能处理（研究热点）<ul><li>目的：智能识别跟踪，定位监控和管理等</li><li>云计算和人工智能对海量数据进行存储分析和处理 </li></ul></li></ul><h2 id="3-体系结构（重要）"><a href="#3-体系结构（重要）" class="headerlink" title="3. 体系结构（重要）"></a>3. 体系结构（重要）</h2><p>桂晓琳（西交）五层架构：</p><ul><li>数据存储</li><li>数据处理</li><li>通信处理</li><li>自动控制技术</li><li>标识和感知</li></ul><p>三层架构（或四层）</p><ul><li><p>海 传感器海量的感知层。<br>在感知层进行计算，也是一个研究方向</p><ul><li><p>物计算：在感知层对数据进行计算（轻量级）</p></li><li><p>雾计算：边缘计算，分担云的计算压力</p></li></ul></li><li><p>网 互联网</p><p> 互联网形态很多，如何整合物联网到各个网络上进行应用？</p><p> ngi（next generation Internet） 下一代网络<br> <a href="https://en.wikipedia.org/wiki/Next_Generation_Internet" target="_blank" rel="noopener">Wikipedia : NGI</a></p><p> 无线网络 LTE </p><p> 与互联网隔离的专用网络，保证安全</p><p> 需要根据每一个层次的每一个模块进行安全处理</p></li><li><p>云 应用处理层</p></li></ul><p>分布式云</p><p>服务层也常称为中间件</p><h2 id="4-关键技术"><a href="#4-关键技术" class="headerlink" title="4. 关键技术"></a>4. 关键技术</h2><ul><li><p>基础资源管理与服务 pki</p><ul><li>名称和地址（依托IPV6）</li><li>核心技术  </li></ul></li><li><p>信息获取和识别技术</p><ul><li>传感器</li><li>RFID</li><li></li></ul></li><li><p>组网与传输技术</p><ul><li>无线传感网</li><li>计算机网络</li></ul></li><li><p>信息处理技术</p><p>传统数据库无法满足信息存储需求</p><ul><li>数据挖掘</li><li>数据清洗</li><li>深度学习</li><li>云和虚拟化</li><li>…</li></ul></li><li><p>安全技术</p></li><li><p>物联网系统集成技术</p><ul><li>MEMS（微电机系统）</li><li>集感知传输预处理等功能集中在一体的节点设备</li><li></li></ul></li><li><p>共性支持技术</p><ul><li>专用操作系统和综合软件开发环境</li></ul></li></ul><h2 id="5-应用和发展趋势"><a href="#5-应用和发展趋势" class="headerlink" title="5. 应用和发展趋势"></a>5. 应用和发展趋势</h2><ul><li>安全防护</li><li>更普及的智能消费设备</li><li>更加关注人工智能</li><li>更快速的数据转化</li></ul><h2 id="6-物联网行业"><a href="#6-物联网行业" class="headerlink" title="6. 物联网行业"></a>6. 物联网行业</h2><ul><li>智慧家居</li><li>智慧农业</li><li>智慧医疗</li><li>智慧工业</li><li>智慧教育</li><li>食品安全</li><li>智慧城市</li><li>智慧交通</li><li>…</li></ul><p>物联网是一种趋势，更多的需要我们去探索和创造…</p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;物联网：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过射频识别（RFID）装置、传感器、 全球定位系统等信息传感设备，按照约定的协议，把地球上的任何具体事物同互联网连接起来，并进行信息交换和通信，实现识别、定位、监控、控制和管理的一种网络。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Iot" scheme="https://cmdxy.com/categories/Iot/"/>
    
    
      <category term="Iot" scheme="https://cmdxy.com/tags/Iot/"/>
    
  </entry>
  
  <entry>
    <title>Start My Blog Trip - Power By Hexo</title>
    <link href="https://cmdxy.com/posts/start-my-blog.html"/>
    <id>https://cmdxy.com/posts/start-my-blog.html</id>
    <published>2020-02-07T12:41:26.425Z</published>
    <updated>2020-03-01T16:04:44.634Z</updated>
    
    <content type="html"><![CDATA[<hr><p> <strong>Life is a choice, Bad things happen to everybody, How you deal with it that matters.</strong></p><hr><ul><li>前言： </li><li>通过写博客将自己在生活学习中的一些知识和经验记录下来，不断地积累知识，总结经验，来记录生活吧。除此之外，更重要的是能够保持写作，在写作中保持思考…..</li></ul><a id="more"></a><h2 id="为何要搭建自己的博客？"><a href="#为何要搭建自己的博客？" class="headerlink" title="为何要搭建自己的博客？"></a>为何要搭建自己的博客？</h2><h3 id="记录"><a href="#记录" class="headerlink" title="记录"></a>记录</h3><p>记录是一件美好的事情，而我们却常常忽略。</p><p>直到有一天想去回忆以前发生的事情时，却发现很多东西已经在记忆中变得模糊，当别人提及时自己甚至不曾记得它发生过。慢慢地，一切似乎都变得不重要起来。 长大了却发现时间过得太快，父母逐渐白了头发，长辈的眼睛逐渐变得浑浊，回想曾与过世的亲人相处的美好时光，那仅存的记忆却变得那么弥足珍贵。</p><p>记录，让时间过得慢些吧。</p><h3 id="分享"><a href="#分享" class="headerlink" title="分享"></a>分享</h3><p>分享是一个喜悦的过程，而我们却逐渐封闭。</p><p>分享，让一切逐渐有意义起来。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>善于总结，乐于进步。</p><h2 id="如何安装Hexo博客？"><a href="#如何安装Hexo博客？" class="headerlink" title="如何安装Hexo博客？"></a>如何安装Hexo博客？</h2><h3 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装node.js</h3><p>根据系统安装相应的版本。</p><p>下载地址：<a href="https://nodejs.org/en/" target="_blank" rel="noopener">node.js</a></p><h3 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h3><p>根据系统安装相应的版本。</p><p>下载地址：<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">git</a></p><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>在node.js和git安装完成后，即可使用 npm 安装 Hexo。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h3 id="本地搭建hexo"><a href="#本地搭建hexo" class="headerlink" title="本地搭建hexo"></a>本地搭建hexo</h3><ul><li>新建文件夹，例如blog</li><li>进入该文件夹，输入hexo init </li><li>运行hexo s，浏览器输入localhost:4000，可看见搭建成功。</li></ul><h3 id="将博客与GitHub关联"><a href="#将博客与GitHub关联" class="headerlink" title="将博客与GitHub关联"></a>将博客与GitHub关联</h3><ul><li>创建一个名字为username.github.io的仓库。</li><li>打开blog/_config.yml，将deploy改为如下的：<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">deploy</span>:</span><br><span class="line">  <span class="attribute">type</span>: git </span><br><span class="line">  <span class="attribute">repo</span>: <span class="attribute">https</span>:<span class="comment">//github.com/username/username.github.io.git</span></span><br><span class="line">  <span class="attribute">branch</span>: master</span><br></pre></td></tr></table></figure></li><li>运行： hexo g（生成静态文件）</li><li>运行：hexo d（将本地推送至GitHub）</li><li>打开浏览器访问<a href="http://username.github.io.git" target="_blank" rel="noopener"></a></li></ul><h3 id="博客绑定域名"><a href="#博客绑定域名" class="headerlink" title="博客绑定域名"></a>博客绑定域名</h3><p>这时博客已经搭建好，使用域名访问比较好，也可以不用域名。</p><ul><li>申请域名</li><li>将域名解析到博客的地址。</li><li>为博客添加CNAME文件，内容为你的域名，如github.com</li><li>运行 hexo g &amp;&amp; hexo d</li><li>进入浏览器访问你的域名即可。</li></ul><h2 id="如何使用Hexo博客？"><a href="#如何使用Hexo博客？" class="headerlink" title="如何使用Hexo博客？"></a>如何使用Hexo博客？</h2><p>此时博客已经搭建完毕，下面就可以更新博客内容了。</p><h3 id="新建一篇博客"><a href="#新建一篇博客" class="headerlink" title="新建一篇博客"></a>新建一篇博客</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo n <span class="string">"文章名"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="启动服务预览"><a href="#启动服务预览" class="headerlink" title="启动服务预览"></a>启动服务预览</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="发布到站点"><a href="#发布到站点" class="headerlink" title="发布到站点"></a>发布到站点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p><h2 id="如何进行主题美化？"><a href="#如何进行主题美化？" class="headerlink" title="如何进行主题美化？"></a>如何进行主题美化？</h2><p>网上有大量的教程，可自行搜索。</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">hexo 中文</a></p><p><a href="https://thief.one/%2F2017%2F03%2F03%2FHexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B%2F" target="_blank" rel="noopener">nmask’s blog 配置美化</a></p><p><a href="http://www.dragonstyle.win/3358042383.html" target="_blank" rel="noopener">Dragonstyle’s Home Next主题美化</a></p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;p&gt; &lt;strong&gt;Life is a choice, Bad things happen to everybody, How you deal with it that matters.&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;前言： &lt;/li&gt;
&lt;li&gt;通过写博客将自己在生活学习中的一些知识和经验记录下来，不断地积累知识，总结经验，来记录生活吧。除此之外，更重要的是能够保持写作，在写作中保持思考…..&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Windows使用cgi网络编程（python）</title>
    <link href="https://cmdxy.com/posts/cgi-python-windows.html"/>
    <id>https://cmdxy.com/posts/cgi-python-windows.html</id>
    <published>2019-12-14T03:31:40.000Z</published>
    <updated>2020-03-03T03:51:19.572Z</updated>
    
    <content type="html"><![CDATA[<ul><li>前言</li></ul><p>python课程作业要求实现cgi访问，由于使用的是Windows10，而网上搜索的教程都是Linux/unix平台的教程。虽然不同平台上的方法大致相同，但是还是有点坑的，这里记录一下Windows平台在配置文件时的过程。</p><a id="more"></a><h2 id="查看python安装路径"><a href="#查看python安装路径" class="headerlink" title="查看python安装路径"></a>查看python安装路径</h2><p>  在cmd模式下输入<br>  <code>where python</code></p><p>  回车后发现安装路径为：<br>  <figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">D:<span class="symbol">\P</span>rogram Files<span class="symbol">\p</span>ython3.7<span class="symbol">\p</span>ython.exe</span><br><span class="line"></span><br><span class="line">C:<span class="symbol">\U</span>sers<span class="symbol">\U</span>sername<span class="symbol">\A</span>ppData<span class="symbol">\L</span>ocal<span class="symbol">\M</span>icrosoft<span class="symbol">\W</span>indowsApps<span class="symbol">\p</span>ython.exe</span><br></pre></td></tr></table></figure></p><h2 id="进入python安装路径"><a href="#进入python安装路径" class="headerlink" title="进入python安装路径"></a>进入python安装路径</h2><ul><li><p>切换目录</p><ul><li>输入<code>D:</code>进入D盘</li><li>输入<code>cd 你的路径</code>进入python安装路路径</li></ul></li><li><p>配置cgi-bin文件</p><ul><li>cgi-bin文件夹：存放python解释脚本（.py文件）</li><li>CGI文件夹：存放静态网页界面（.html）文件<br><strong>注意：</strong><ol><li>cgi-bin文件名最好不要修改。CGI文件夹可以为任意名，在浏览器输入时自己记住。</li><li>.html文件不可放在cgi-bin中，否则浏览器解释时会为文本文件。</li></ol></li></ul></li></ul><h2 id="在python模块中使用http-server直接运行一个临时web服务器"><a href="#在python模块中使用http-server直接运行一个临时web服务器" class="headerlink" title="在python模块中使用http.server直接运行一个临时web服务器"></a>在python模块中使用http.server直接运行一个临时web服务器</h2><ul><li><p>在cmd中python安装文件夹输入命令:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">D</span>:\<span class="selector-tag">Program</span> <span class="selector-tag">Files</span>\<span class="selector-tag">python3</span><span class="selector-class">.7</span>&gt;<span class="selector-tag">python</span> <span class="selector-tag">-m</span> <span class="selector-tag">http</span><span class="selector-class">.server</span> <span class="selector-tag">--cgi</span></span><br></pre></td></tr></table></figure><p>成功会出现:</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Serving HTTP on <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span> port <span class="number">8000</span> (http:<span class="comment">//0.0.0.0:8000/) ...</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="编辑-html文件和-py文件。可参考菜鸟教程"><a href="#编辑-html文件和-py文件。可参考菜鸟教程" class="headerlink" title="编辑.html文件和.py文件。可参考菜鸟教程"></a>编辑.html文件和.py文件。可参考<a href="https://www.runoob.com/python/python-cgi.html" target="_blank" rel="noopener">菜鸟教程</a></h2><h2 id="浏览器访问"><a href="#浏览器访问" class="headerlink" title="浏览器访问"></a>浏览器访问</h2><ul><li>输入地址</li></ul><ul><li><p>访问.py文件：</p><p> 浏览器地址栏输入</p> <figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhos<span class="variable">t:8000</span>/cgi-bin/<span class="built_in">index</span>.<span class="keyword">py</span></span><br></pre></td></tr></table></figure></li><li><p>访问.html文件:</p><p> 浏览器地址栏输入</p> <figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span>localhost:<span class="number">8000</span><span class="regexp">/CGI/</span>hello_get.html</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>回车 访问成功</p><p> <strong>注意：</strong></p><ul><li>访问前需要开启web服务，见3。</li></ul></li></ul><p>好了，以上就是Windows10下用python运行一个cgi服务的过程。</p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;前言&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;python课程作业要求实现cgi访问，由于使用的是Windows10，而网上搜索的教程都是Linux/unix平台的教程。虽然不同平台上的方法大致相同，但是还是有点坑的，这里记录一下Windows平台在配置文件时的过程。&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="https://cmdxy.com/categories/python/"/>
    
    
      <category term="python" scheme="https://cmdxy.com/tags/python/"/>
    
      <category term="cgi" scheme="https://cmdxy.com/tags/cgi/"/>
    
  </entry>
  
  <entry>
    <title>将Java web项目部署到Linux云服务器（Centos7为例）</title>
    <link href="https://cmdxy.com/posts/java-web-deploy-to-ecs.html"/>
    <id>https://cmdxy.com/posts/java-web-deploy-to-ecs.html</id>
    <published>2019-11-15T03:31:40.000Z</published>
    <updated>2020-03-01T16:02:49.566Z</updated>
    
    <content type="html"><![CDATA[<ul><li>前言<ul><li>CSDN上有些教程很零散，对我这种小白不友好，在这记录一下自己在部署Java web项目的过程。环境为阿里云ecs学生机 （centos7）</li><li>实践周的简单智慧医疗系统，需要在网页查询数据，显示一定的历史数据，采用java来做云端。<a id="more"></a></li></ul></li></ul><h2 id="安装JDK"><a href="#安装JDK" class="headerlink" title="安装JDK"></a>安装JDK</h2><h3 id="服务器安装JDK-1-8"><a href="#服务器安装JDK-1-8" class="headerlink" title="服务器安装JDK 1.8"></a>服务器安装JDK 1.8</h3><ul><li>终端输入以下代码。<br><code>$yum -y install java-1.8.0-openjdk java-1.8.0-openjdk-devel</code></li></ul><h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><ul><li><p>将下面的三行添加到 /etc/profile 后面</p>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.232.b09-0.el7_7.x86_64</span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$JAVA_HOME</span>/jre/lib/rt.jar:<span class="variable">$JAVA_HOME</span>/lib/dt.jar:<span class="variable">$JAVA_HOME</span>/lib/tools.jar</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/</span><br></pre></td></tr></table></figure></li><li><p>保存关闭后，执行：<code>source /etc/profile</code> 让环境变量设置立即生效</p></li><li><p>验证是否安装成功，终端输入命令： <code>java -version</code></p></li></ul><h2 id="安装Tomcat"><a href="#安装Tomcat" class="headerlink" title="安装Tomcat"></a>安装Tomcat</h2><h3 id="本机电脑下载tomcat"><a href="#本机电脑下载tomcat" class="headerlink" title="本机电脑下载tomcat"></a>本机电脑下载tomcat</h3><ul><li><p>进入下面网址下载tomcat，最新版就可以。<br><code>https://tomcat.apache.org/download-80.cgi</code></p></li><li><p>本机安装配置tomcat环境，用以调试开发。</p></li></ul><h3 id="将tomecat-tar-gz下载到-usr-local或者先cd-usr-local"><a href="#将tomecat-tar-gz下载到-usr-local或者先cd-usr-local" class="headerlink" title="将tomecat.tar.gz下载到/usr/local或者先cd /usr/local"></a>将tomecat.tar.gz下载到/usr/local或者先cd /usr/local</h3><ul><li>执行以下命令   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://mirrors.shuosc.org/apache/   tomcat/tomcat-8/v8.5.24/bin/apache-tomcat-8.5.24.tar.gz</span><br></pre></td></tr></table></figure></li></ul><h3 id="解压刚刚下载的文件，并且重命名为tomcat"><a href="#解压刚刚下载的文件，并且重命名为tomcat" class="headerlink" title="解压刚刚下载的文件，并且重命名为tomcat"></a>解压刚刚下载的文件，并且重命名为tomcat</h3>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tar zxvf apache-tomcat-8.5.47.tar.gz &amp; mv apache-tomcat-8.5.47 tomcat</span><br></pre></td></tr></table></figure><h3 id="启动tomcat"><a href="#启动tomcat" class="headerlink" title="启动tomcat"></a>启动tomcat</h3><ul><li><p>终端执行命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ /usr/<span class="built_in">local</span>/tomcat/bin/startup.sh</span><br></pre></td></tr></table></figure></li><li><p>出现成功的提示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Using CATALINA_BASE:   /usr/<span class="built_in">local</span>/tomcat</span><br><span class="line">Using CATALINA_HOME:   /usr/<span class="built_in">local</span>/tomcat</span><br><span class="line">Using CATALINA_TMPDIR: /usr/<span class="built_in">local</span>/tomcat/temp</span><br><span class="line">Using JRE_HOME:        /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.121-0.b13.el7_3.x86_64</span><br><span class="line">Using CLASSPATH:       /usr/<span class="built_in">local</span>/tomcat/bin/bootstrap.jar:/usr/<span class="built_in">local</span>/tomcat/bin/tomcat-juli.jar</span><br><span class="line">Tomcat started.</span><br></pre></td></tr></table></figure></li></ul><h3 id="不能访问tomcat的相关解决办法"><a href="#不能访问tomcat的相关解决办法" class="headerlink" title="不能访问tomcat的相关解决办法"></a>不能访问tomcat的相关解决办法</h3><ul><li><p>防火墙未开启8080端口，解决如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># firewall-cmd --zone=public --add-port=8080/tcp --permanent</span></span><br><span class="line">[root@localhost bin]<span class="comment"># firewall-cmd --reload</span></span><br></pre></td></tr></table></figure></li><li><p>服务器未开启安全组</p><ul><li>在阿里云服务器的控制台添加安全组，自定义tcp。端口设置为8080</li></ul></li></ul><h2 id="安装MySql"><a href="#安装MySql" class="headerlink" title="安装MySql"></a>安装MySql</h2><h3 id="使用wget命令下载mysql-5-7版本"><a href="#使用wget命令下载mysql-5-7版本" class="headerlink" title="使用wget命令下载mysql(5.7版本)"></a>使用wget命令下载mysql(5.7版本)</h3><ul><li><p>先进入<code>/usr/local</code>,然后输入以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wget https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.20-linux-glibc2.12-x86_64.tar.gz</span><br></pre></td></tr></table></figure></li></ul><h3 id="解压mysql压缩包，移动到mysql文件夹中"><a href="#解压mysql压缩包，移动到mysql文件夹中" class="headerlink" title="解压mysql压缩包，移动到mysql文件夹中"></a>解压mysql压缩包，移动到mysql文件夹中</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$tar</span> zxvf mysql-5.7.20-linux-glibc2.12-x86_64.tar.gz</span><br></pre></td></tr></table></figure><h3 id="初始化mysql"><a href="#初始化mysql" class="headerlink" title="初始化mysql"></a>初始化mysql</h3><ul><li><p>新建用户组</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ groupadd mysql</span><br></pre></td></tr></table></figure></li><li><p>把mysql用户加入到用户组中</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ useradd -r -g mysql mysql</span><br></pre></td></tr></table></figure></li><li><p>创建目录并授权</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir data mysql-file</span><br><span class="line">$ chown -R mysql</span><br><span class="line">$ chgrp -R mysql</span><br></pre></td></tr></table></figure></li><li><p>初始化</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ bin/mysqld --initialize --user=mysql</span><br></pre></td></tr></table></figure><p> 若报错：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/mysqld: error <span class="keyword">while</span> loading shared libraries: libaio.so.1: cannot open shared object file: No such file or directory</span><br></pre></td></tr></table></figure><p>解决办法：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum install libaio</span><br></pre></td></tr></table></figure></li><li><p>临时密钥：root@localhost后内容edDd9RjTV6%i</p></li><li><p>生成RSA密钥</p></li><li><p>授予独写权限</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ chown -R root .</span><br><span class="line">$ chown -R mysql data mysql-files</span><br></pre></td></tr></table></figure></li><li><p>添加到Mysql启动脚本到系统服务</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cp support-files/mysql.server /etc/init.d/mysql.server</span><br></pre></td></tr></table></figure></li></ul><h3 id="启动MySql服务"><a href="#启动MySql服务" class="headerlink" title="启动MySql服务"></a>启动MySql服务</h3>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ service mysql.server start</span><br></pre></td></tr></table></figure><p>   若报错：</p>   <figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysqld_safe <span class="keyword">error</span>: <span class="built_in">log</span>-<span class="keyword">error</span> <span class="keyword">set</span> <span class="keyword">to</span> '/var/<span class="built_in">log</span>/mariadb/mariadb.<span class="built_in">log</span>', however <span class="built_in">file</span> don't exists. Create writable <span class="keyword">for</span> user 'mysql'.</span><br><span class="line">The server quit <span class="keyword">without</span> updating PID <span class="built_in">file</span> (/var/lib/mysql/i[FAILED]<span class="number">50</span>wj90m4drpoxZ.pid).</span><br></pre></td></tr></table></figure><p>   解决：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir /var/<span class="built_in">log</span>/mariadb</span><br><span class="line">$ touch /var/<span class="built_in">log</span>/mariadb/mariadb.log</span><br><span class="line">$ chown -R mysql:mysql /var/<span class="built_in">log</span>/mariadb</span><br></pre></td></tr></table></figure><h3 id="登录MySQL，密码是3中的密码"><a href="#登录MySQL，密码是3中的密码" class="headerlink" title="登录MySQL，密码是3中的密码"></a>登录MySQL，密码是3中的密码</h3>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ /usr/<span class="built_in">local</span>/mysql/bin/mysql -uroot -p</span><br></pre></td></tr></table></figure><p>   若报错：<br>   <figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Can't connect <span class="keyword">to</span> <span class="keyword">local</span> MySQL server <span class="keyword">through</span> socket '/tmp/mysql.sock'</span><br></pre></td></tr></table></figure></p><p>   解决办法：修改<code>/etc/my.cnf</code><br>   <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"><span class="attr">datadir</span>=/var/lib/mysql</span><br><span class="line"><span class="comment">#socket=/var/lib/mysql/mysql.sock</span></span><br><span class="line"><span class="attr">socket</span>=/tmp/mysql.sock</span><br></pre></td></tr></table></figure></p><ul><li>再次登录,密码同上<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ service mysql.server start</span><br></pre></td></tr></table></figure></li></ul><h3 id="设置MySQL密码"><a href="#设置MySQL密码" class="headerlink" title="设置MySQL密码"></a>设置MySQL密码</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="keyword">set</span> <span class="keyword">password</span>=<span class="keyword">password</span>(<span class="string">'123456'</span>);</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected, <span class="number">1</span> <span class="built_in">warning</span> (<span class="number">0.00</span> sec)/</span><br><span class="line">mysql&gt; flush <span class="keyword">privileges</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line">mysql&gt; <span class="keyword">exit</span>;</span><br><span class="line">Bye</span><br></pre></td></tr></table></figure><h3 id="再次登录"><a href="#再次登录" class="headerlink" title="再次登录"></a>再次登录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ /usr/<span class="built_in">local</span>/mysql/bin/mysql -uroot -p</span><br></pre></td></tr></table></figure><h3 id="授予权限，记得刷新权限。"><a href="#授予权限，记得刷新权限。" class="headerlink" title="授予权限，记得刷新权限。"></a>授予权限，记得刷新权限。</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> *.* <span class="keyword">TO</span> <span class="string">'root'</span>@<span class="string">'%'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'root'</span> <span class="keyword">WITH</span> <span class="keyword">GRANT</span> <span class="keyword">OPTION</span>;<span class="keyword">FLUSH</span> <span class="keyword">PRIVILEGES</span>;</span><br></pre></td></tr></table></figure><h2 id="打包web项目"><a href="#打包web项目" class="headerlink" title="打包web项目"></a>打包web项目</h2><ul><li><p>先修改jdbc.properties文件的url 为下面的。将192.168.44.128换成服务器ip</p> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">url</span>=jdbc:mysql://<span class="number">192.168</span>.<span class="number">44.128</span>:<span class="number">3306</span>/further?useUnicode=<span class="literal">yes</span>&amp;</span><br><span class="line"><span class="attr">characterEncoding</span>=utf8</span><br></pre></td></tr></table></figure></li><li><p>Project-&gt;Artifacts-&gt;增加webApplication:Exploded 选在项目基础上</p></li><li><p>Project-&gt;Artifacts-&gt;增加webApplication:Archive 选在2的基础上</p></li><li><p>发现有Create Manifest的提示。点击，默认创建即可。然后点击apply和ok</p></li><li><p>重新build项目。Build-&gt;Build Artifacts-&gt;All Artifacts-&gt;build</p></li><li><p>创建好后进入项目文件夹out/artifacts/项目名_war/</p></li><li><p>将.war文件传至服务器的/usr/locol/tomcat/webapps下。进入服务器后重启tomcat会自动解压</p></li><li><p>访问http://服务器ip:8080/项目名</p></li></ul><p><strong>这个时候我们所写的项目已成功部署，可以通过浏览器输入服务器的ip地址访问了。若想通过域名访问需要到服务器控制台将域名解析到我们的服务器。</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;前言&lt;ul&gt;
&lt;li&gt;CSDN上有些教程很零散，对我这种小白不友好，在这记录一下自己在部署Java web项目的过程。环境为阿里云ecs学生机 （centos7）&lt;/li&gt;
&lt;li&gt;实践周的简单智慧医疗系统，需要在网页查询数据，显示一定的历史数据，采用java来做云端。
    
    </summary>
    
    
      <category term="Java web" scheme="https://cmdxy.com/categories/Java-web/"/>
    
    
      <category term="Java Web" scheme="https://cmdxy.com/tags/Java-Web/"/>
    
  </entry>
  
  <entry>
    <title>Markdown基本语法</title>
    <link href="https://cmdxy.com/posts/markdown-programmer.html"/>
    <id>https://cmdxy.com/posts/markdown-programmer.html</id>
    <published>2019-11-09T15:20:28.000Z</published>
    <updated>2020-03-01T15:52:52.869Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>Markdown是什么？</p><p> Markdown是一种轻量级标记语言，它以纯文本形式(易读、易写、易更改)编写文档，并最终以HTML格式发布。<br>Markdown也可以理解为将以MARKDOWN语法编写的语言转换成HTML内容的工具。</p></li></ul><a id="more"></a><h2 id="1-标题"><a href="#1-标题" class="headerlink" title="1. 标题"></a><strong>1. 标题</strong></h2><p>在想要设为标题的文字前加#，一个#是一级标题，两个#是二级标题，以此类推，共支持六级标题。<br><strong>注意：</strong>标准语法需要在#后加一个空格。</p><p>示例：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 一级标题</span></span><br><span class="line"><span class="section">## 二级标题</span></span><br><span class="line"><span class="section">### 三级标题</span></span><br><span class="line"><span class="section">#### 四级标题</span></span><br><span class="line"><span class="section">##### 五级标题</span></span><br><span class="line"><span class="section">###### 六级标题</span></span><br></pre></td></tr></table></figure><p>效果如下：</p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h2 id="2-字体"><a href="#2-字体" class="headerlink" title="2. 字体"></a><strong>2. 字体</strong></h2><p><strong>1. 加粗</strong></p><p>要加粗的文字左右分别加<strong>2</strong>个*</p><p><strong>2. 斜体</strong></p><p>要倾斜的文字左右分别加<strong>1</strong>个*</p><p><strong>3. 斜体加粗</strong></p><p>要倾斜和加粗的文字左右分部加<strong>3</strong>个* </p><p><strong>4. 删除线</strong></p><p>要加删除线的文字左右分别加<strong>2</strong>个~</p><p>示例：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">**文字加粗**</span></span><br><span class="line"><span class="emphasis">*文字倾斜*</span></span><br><span class="line"><span class="strong">***文字加粗倾斜**</span>*</span><br><span class="line">~~文字加删除线~~</span><br></pre></td></tr></table></figure><p>效果如下：<br><strong>文字加粗</strong><br><em>文字倾斜</em><br><strong><em>文字加粗倾斜</em></strong><br><del>文字加删除线</del></p><h2 id="3-引用"><a href="#3-引用" class="headerlink" title="3. 引用"></a><strong>3. 引用</strong></h2><p>在引用的文字前面加&gt;即可。引用可以嵌套。</p><p>示例：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt; 愈艰难，就愈要做。改革，想来是没有一帆风顺的。 -鲁迅</span></span><br><span class="line">&gt;&gt; 读书应自己思索，自己做主。 -鲁迅</span><br></pre></td></tr></table></figure><p>效果如下：</p><blockquote><p>愈艰难，就愈要做。改革，想来是没有一帆风顺的。 -鲁迅</p><blockquote><p>读书应自己思索，自己做主。 -鲁迅</p></blockquote></blockquote><h2 id="4-分割线"><a href="#4-分割线" class="headerlink" title="4. 分割线"></a><strong>4. 分割线</strong></h2><p>三个以上的-或者*<br>示例：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">----</span><br><span class="line"><span class="emphasis">***</span></span><br><span class="line"><span class="emphasis">***</span>*</span><br></pre></td></tr></table></figure><h2 id="效果如下："><a href="#效果如下：" class="headerlink" title="效果如下："></a>效果如下：</h2><hr><hr><hr><h2 id="5-图片"><a href="#5-图片" class="headerlink" title="5. 图片"></a><strong>5. 图片</strong></h2><p>语法：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">图片下方文字</span>](<span class="link">图片地址 "图片标题"</span>)</span><br><span class="line">[]内填的文字等于对图片内容的解释，图片标题当鼠标移到图片上时会显示内容，可加可不加</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">i love markdown</span>](<span class="link">https://cn.bing.com/th?id=OIP.KLvPfJ6Ui3cZQd4Zj17kJgHaE8&amp;pid=Api&amp;rs=1 "Bing photo"</span>)</span><br></pre></td></tr></table></figure><p>效果如下：<br><img src="http://mikemclin.net/mmwp/wp-content/uploads/2013/03/markdown-syntax-language.png" alt="i love markdown" title="Bing photo"></p><p><strong>6. 超链接</strong></p><p>语法：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">超链接名</span>](<span class="link">超链接地址"超链接标题"</span>)</span><br><span class="line">标题可加可不加</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">markdown语法说明</span>](<span class="link">http://www.markdown.cn/"语法说明"</span>)</span><br><span class="line">[<span class="string">Google</span>](<span class="link">google.com"Google"</span>)</span><br><span class="line">标题可加可不加</span><br></pre></td></tr></table></figure><p>效果如下：<br><a href="http://www.markdown.cn/" target="_blank" rel="noopener"语法说明"">markdown语法说明</a></p><p><a href="google.com"Google"">Google</a></p><h2 id="7-列表"><a href="#7-列表" class="headerlink" title="7. 列表"></a><strong>7. 列表</strong></h2><ul><li>无序列表</li></ul><p>语法：</p><p>无序列表用 -  + * 任何一个都可以</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>- 列表内容</span><br><span class="line"><span class="bullet">2. </span>+ 列表内容</span><br><span class="line"><span class="bullet">3. </span>* 列表内容</span><br><span class="line"><span class="strong">**注意**</span> - 符号后需要有一个空格</span><br></pre></td></tr></table></figure><p>效果如下：</p><ul><li>列表内容</li></ul><ul><li>列表内容</li></ul><ul><li>列表内容</li></ul><ul><li>有序列表</li></ul><p>语法：数字加点</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>列表内容</span><br><span class="line"><span class="bullet">2. </span>列表内容</span><br><span class="line"><span class="bullet">3. </span>列表内容</span><br><span class="line"><span class="strong">**注意:**</span> 序号后需要一个空格。回车会自动增加序号</span><br></pre></td></tr></table></figure><p>效果如下：</p><ol><li>列表内容</li><li>列表内容</li><li>列表内容</li></ol><ul><li>列表嵌套</li></ul><p><strong>上一级和下一级之间加三个空格即可</strong><br>语法：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">- </span>一级无序列表</span><br><span class="line"><span class="bullet">   - </span>二级无序列表 </span><br><span class="line"><span class="bullet">   - </span>二级无序列表</span><br><span class="line"><span class="bullet">   - </span>二级无序列表</span><br><span class="line"><span class="bullet">- </span>一级无序列表</span><br><span class="line"><span class="bullet">   - </span>二级无序列表</span><br><span class="line"><span class="bullet">   - </span>二级无序列表</span><br><span class="line"><span class="bullet">      - </span>三级无序列表</span><br><span class="line"><span class="bullet">      - </span>三级无序列表</span><br><span class="line"></span><br><span class="line"><span class="bullet">1. </span>一级有序列表</span><br><span class="line"><span class="bullet">   1. </span>二级有序列表</span><br><span class="line"><span class="bullet">   2. </span>二级有序列表</span><br><span class="line"><span class="code">      1.三级有序列表</span></span><br></pre></td></tr></table></figure><p>效果如下：</p><ul><li>一级无序列表<ul><li>二级无序列表 </li><li>二级无序列表</li><li>二级无序列表</li></ul></li><li>一级无序列表<ul><li>二级无序列表</li><li>二级无序列表<ul><li>三级无序列表</li><li>三级无序列表</li></ul></li></ul></li></ul><ol><li>一级有序列表<ol><li>二级有序列表</li><li>二级有序列表<ol><li>三级有序列表</li></ol></li></ol></li></ol><h2 id="8-表格"><a href="#8-表格" class="headerlink" title="8. 表格"></a><strong>8. 表格</strong></h2><p>语法：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">表头|表头|表头</span><br><span class="line">---|:--:|--:</span><br><span class="line">内容|内容|内容</span><br><span class="line">内容|内容|内容</span><br><span class="line"></span><br><span class="line"><span class="bullet">- </span>文字默认居左</span><br><span class="line"><span class="bullet">- </span>两边加:表示居中</span><br><span class="line"><span class="bullet">- </span>右边加:表示居右</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| 时间 | 周日 | 周一 | 周二 | 周三 | 周四 | 周五 | 周六 |</span><br><span class="line">| ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- |</span><br><span class="line">| 6:00 | 休息 |   数 | 数   | 数   | 数   | 数   | 休息 |</span><br><span class="line">| 8:00 | 休息 |   数 | 数   | 数   | 数   | 数   | 休息 |</span><br></pre></td></tr></table></figure><p>效果如下：</p><table><thead><tr><th>时间</th><th>周日</th><th>周一</th><th>周二</th><th>周三</th><th>周四</th><th>周五</th><th>周六</th></tr></thead><tbody><tr><td>6:00</td><td>休息</td><td>数</td><td>数</td><td>数</td><td>数</td><td>数</td><td>休息</td></tr><tr><td>8:00</td><td>休息</td><td>数</td><td>数</td><td>数</td><td>数</td><td>数</td><td>休息</td></tr></tbody></table><h2 id="9-代码"><a href="#9-代码" class="headerlink" title="9. 代码"></a><strong>9. 代码</strong></h2><p>语法：</p><p>单行代码：代码两边各一个单引号</p><p><code>$rm -rf /*</code></p><p>代码块：代码两边各三个单引号</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="10-待办"><a href="#10-待办" class="headerlink" title="10. 待办"></a><strong>10. 待办</strong></h2><p>语法：<br>-空格[空格]空格 代办事项<br>-空格[x]空格 已完成事项<br>示例：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">- </span>[ ] 吃饭</span><br><span class="line"><span class="bullet">- </span>[x] 学习</span><br></pre></td></tr></table></figure><p>效果如下：</p><ul><li><input disabled="" type="checkbox"> 吃饭</li><li><input checked="" disabled="" type="checkbox"> 学习</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;p&gt;Markdown是什么？&lt;/p&gt;
&lt;p&gt; Markdown是一种轻量级标记语言，它以纯文本形式(易读、易写、易更改)编写文档，并最终以HTML格式发布。&lt;br&gt;Markdown也可以理解为将以MARKDOWN语法编写的语言转换成HTML内容的工具。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
    
      <category term="markdown" scheme="https://cmdxy.com/tags/markdown/"/>
    
  </entry>
  
</feed>
