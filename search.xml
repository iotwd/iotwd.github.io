<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Start My Blog Trip - Power By Hexo</title>
    <url>/posts/start%E2%80%94my-blog.html</url>
    <content><![CDATA[<hr>
<h3 id="Life-is-a-choice-Bad-things-happen-to-everybody-How-you-deal-with-it-that-matters"><a href="#Life-is-a-choice-Bad-things-happen-to-everybody-How-you-deal-with-it-that-matters" class="headerlink" title="Life is a choice, Bad things happen to everybody, How you deal with it that matters."></a>Life is a choice, Bad things happen to everybody, How you deal with it that matters.</h3><hr>
<p>通过写博客将自己在生活学习中的一些知识和经验记录下来，不断地积累知识，总结经验，来记录生活吧。除此之外，更重要的是能够保持写作，在写作中保持思考…..</p>
<a id="more"></a>

<h2 id="为何要搭建自己的博客？"><a href="#为何要搭建自己的博客？" class="headerlink" title="为何要搭建自己的博客？"></a>为何要搭建自己的博客？</h2><h3 id="记录"><a href="#记录" class="headerlink" title="记录"></a>记录</h3><p>记录是一件美好的事情，而我们却常常忽略。</p>
<p>直到有一天想去回忆以前发生的事情时，却发现很多东西已经在记忆中变得模糊，当别人提及时自己甚至不曾记得它发生过。慢慢地，一切似乎都变得不重要起来。 长大了却发现时间过得太快，父母逐渐白了头发，长辈的眼睛逐渐变得浑浊，回想曾与过世的亲人相处的美好时光，那仅存的记忆却变得那么弥足珍贵。</p>
<p>记录，让时间过得慢些吧。</p>
<h3 id="分享"><a href="#分享" class="headerlink" title="分享"></a>分享</h3><p>分享是一个喜悦的过程，而我们却逐渐封闭。</p>
<p>分享，让一切逐渐有意义起来。</p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>善于总结，乐于进步。</p>
<h2 id="如何安装Hexo博客？"><a href="#如何安装Hexo博客？" class="headerlink" title="如何安装Hexo博客？"></a>如何安装Hexo博客？</h2><h3 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装node.js</h3><p>根据系统安装相应的版本。</p>
<p>下载地址：<a href="https://nodejs.org/en/" target="_blank" rel="noopener">node.js</a></p>
<h3 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h3><p>根据系统安装相应的版本。</p>
<p>下载地址：<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">git</a></p>
<h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>在node.js和git安装完成后，即可使用 npm 安装 Hexo。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<h3 id="本地搭建hexo"><a href="#本地搭建hexo" class="headerlink" title="本地搭建hexo"></a>本地搭建hexo</h3><ul>
<li>新建文件夹，例如blog</li>
<li>进入该文件夹，输入hexo init </li>
<li>运行hexo s，浏览器输入localhost:4000，可看见搭建成功。</li>
</ul>
<h3 id="将博客与GitHub关联"><a href="#将博客与GitHub关联" class="headerlink" title="将博客与GitHub关联"></a>将博客与GitHub关联</h3><ul>
<li>创建一个名字为username.github.io的仓库。</li>
<li>打开blog/_config.yml，将deploy改为如下的：<figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="attribute">deploy</span>:</span><br><span class="line">  <span class="attribute">type</span>: git </span><br><span class="line">  <span class="attribute">repo</span>: <span class="attribute">https</span>:<span class="comment">//github.com/username/username.github.io.git</span></span><br><span class="line">  <span class="attribute">branch</span>: master</span><br></pre></td></tr></table></figure></li>
<li>运行： hexo g（生成静态文件）</li>
<li>运行：hexo d（将本地推送至GitHub）</li>
<li>打开浏览器访问<a href="http://username.github.io.git" target="_blank" rel="noopener"></a></li>
</ul>
<h3 id="博客绑定域名"><a href="#博客绑定域名" class="headerlink" title="博客绑定域名"></a>博客绑定域名</h3><p>这时博客已经搭建好，使用域名访问比较好，也可以不用域名。</p>
<ul>
<li>申请域名</li>
<li>将域名解析到博客的地址。</li>
<li>为博客添加CNAME文件，内容为你的域名，如github.com</li>
<li>运行 hexo g &amp;&amp; hexo d</li>
<li>进入浏览器访问你的域名即可。</li>
</ul>
<h2 id="如何使用Hexo博客？"><a href="#如何使用Hexo博客？" class="headerlink" title="如何使用Hexo博客？"></a>如何使用Hexo博客？</h2><p>此时博客已经搭建完毕，下面就可以更新博客内容了。</p>
<h3 id="新建一篇博客"><a href="#新建一篇博客" class="headerlink" title="新建一篇博客"></a>新建一篇博客</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo n <span class="string">"文章名"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="启动服务预览"><a href="#启动服务预览" class="headerlink" title="启动服务预览"></a>启动服务预览</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="发布到站点"><a href="#发布到站点" class="headerlink" title="发布到站点"></a>发布到站点</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
<h2 id="如何进行主题美化？"><a href="#如何进行主题美化？" class="headerlink" title="如何进行主题美化？"></a>如何进行主题美化？</h2><p>网上有大量的教程，可自行搜索。</p>
<h2 id="参考文章："><a href="#参考文章：" class="headerlink" title="参考文章："></a>参考文章：</h2><p><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">hexo 中文</a></p>
<p><a href="https://thief.one/%2F2017%2F03%2F03%2FHexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B%2F" target="_blank" rel="noopener">nmask’s blog</a></p>
<p><a href="http://www.dragonstyle.win/3358042383.html" target="_blank" rel="noopener">Dragonstyle’s Home</a></p>
]]></content>
  </entry>
  <entry>
    <title>Windows使用cgi网络编程（python）</title>
    <url>/posts/cgi-python-windows.html</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>python课程作业要求实现cgi访问，由于使用的是Windows10，而网上搜索的教程都是Linux/unix平台的教程。虽然不同平台上的方法大致相同，但是还是有点坑的，这里记录一下Windows平台在配置文件时的过程。</p>
<a id="more"></a>

<p><strong>1. 查看python安装路径</strong></p>
<p>  在cmd模式下输入<br>  <code>where python</code></p>
<p>  回车后发现安装路径为：<br>  <figure class="highlight taggerscript"><table><tr><td class="code"><pre><span class="line">D:<span class="symbol">\P</span>rogram Files<span class="symbol">\p</span>ython3.7<span class="symbol">\p</span>ython.exe</span><br><span class="line"></span><br><span class="line">C:<span class="symbol">\U</span>sers<span class="symbol">\U</span>sername<span class="symbol">\A</span>ppData<span class="symbol">\L</span>ocal<span class="symbol">\M</span>icrosoft<span class="symbol">\W</span>indowsApps<span class="symbol">\p</span>ython.exe</span><br></pre></td></tr></table></figure></p>
<p><strong>2. 进入python安装路径</strong></p>
<ul>
<li><p>切换目录</p>
<ul>
<li>输入<code>D:</code>进入D盘</li>
<li>输入<code>cd 你的路径</code>进入python安装路路径</li>
</ul>
</li>
<li><p>配置cgi-bin文件</p>
<ul>
<li>cgi-bin文件夹：存放python解释脚本（.py文件）</li>
<li>CGI文件夹：存放静态网页界面（.html）文件<br><strong>注意：</strong><ol>
<li>cgi-bin文件名最好不要修改。CGI文件夹可以为任意名，在浏览器输入时自己记住。</li>
<li>.html文件不可放在cgi-bin中，否则浏览器解释时会为文本文件。</li>
</ol>
</li>
</ul>
</li>
</ul>
<p><strong>3. 在python模块中使用http.server直接运行一个临时web服务器</strong></p>
<ul>
<li><p>在cmd中python安装文件夹输入命令:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">D</span>:\<span class="selector-tag">Program</span> <span class="selector-tag">Files</span>\<span class="selector-tag">python3</span><span class="selector-class">.7</span>&gt;<span class="selector-tag">python</span> <span class="selector-tag">-m</span> <span class="selector-tag">http</span><span class="selector-class">.server</span> <span class="selector-tag">--cgi</span></span><br></pre></td></tr></table></figure>

<p>成功会出现:</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">Serving HTTP on <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span> port <span class="number">8000</span> (http:<span class="comment">//0.0.0.0:8000/) ...</span></span><br></pre></td></tr></table></figure>

</li>
</ul>
<p><strong>4. 编辑.html文件和.py文件。可参考<a href="https://www.runoob.com/python/python-cgi.html" target="_blank" rel="noopener">菜鸟教程</a></strong></p>
<p><strong>5. 浏览器访问</strong></p>
<ul>
<li>输入地址</li>
</ul>
<ul>
<li><p>访问.py文件：</p>
<p> 浏览器地址栏输入</p>
 <figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">http://localhos<span class="variable">t:8000</span>/cgi-bin/<span class="built_in">index</span>.<span class="keyword">py</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>访问.html文件:</p>
<p> 浏览器地址栏输入</p>
 <figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">http:<span class="regexp">//</span>localhost:<span class="number">8000</span><span class="regexp">/CGI/</span>hello_get.html</span><br></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>回车 访问成功</p>
<p> <strong>注意：</strong></p>
<ul>
<li>访问前需要开启web服务，见3。</li>
</ul>
</li>
</ul>
<p>好了，以上就是Windows10下用python运行一个cgi服务的过程。</p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>cgi</tag>
      </tags>
  </entry>
  <entry>
    <title>将Java web项目部署到Linux云服务器（Centos7为例）</title>
    <url>/posts/java-web-deploy-to-ecs.html</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><ul>
<li>CSDN上有些教程很零散，对我这种小白不友好，在这记录一下自己在部署Java web项目的过程。环境为阿里云ecs学生机 （centos7）</li>
<li>实践周的简单智慧医疗系统，需要在网页查询数据，显示一定的历史数据，采用java来做云端。<a id="more"></a>


</li>
</ul>
<h2 id="安装JDK"><a href="#安装JDK" class="headerlink" title="安装JDK"></a>安装JDK</h2><ol>
<li><p>服务器安装JDK 1.8</p>
<ul>
<li>终端输入以下代码。<br><code>$yum -y install java-1.8.0-openjdk java-1.8.0-openjdk-devel</code></li>
</ul>
</li>
<li><p>配置环境变量</p>
<ul>
<li><p>将下面的三行添加到 /etc/profile 后面</p>
   <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.232.b09-0.el7_7.x86_64</span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$JAVA_HOME</span>/jre/lib/rt.jar:<span class="variable">$JAVA_HOME</span>/lib/dt.jar:<span class="variable">$JAVA_HOME</span>/lib/tools.jar</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/</span><br></pre></td></tr></table></figure>
</li>
<li><p>保存关闭后，执行：<code>source /etc/profile</code> 让环境变量设置立即生效</p>
</li>
<li><p>验证是否安装成功，终端输入命令： <code>java -version</code></p>
</li>
</ul>
</li>
</ol>
<h2 id="安装Tomcat"><a href="#安装Tomcat" class="headerlink" title="安装Tomcat"></a>安装Tomcat</h2><ol>
<li><p>本机电脑下载tomcat </p>
<ul>
<li><p>进入下面网址下载tomcat，最新版就可以。<br><code>https://tomcat.apache.org/download-80.cgi</code></p>
</li>
<li><p>本机安装配置tomcat环境，用以调试开发。</p>
</li>
</ul>
</li>
<li><p>将tomecat.tar.gz下载到/usr/local或者先cd /usr/local</p>
<ul>
<li>执行以下命令   <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget http://mirrors.shuosc.org/apache/   tomcat/tomcat-8/v8.5.24/bin/apache-tomcat-8.5.24.tar.gz</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>解压刚刚下载的文件，并且重命名为tomcat</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar zxvf apache-tomcat-8.5.47.tar.gz &amp; mv apache-tomcat-8.5.47 tomcat</span><br></pre></td></tr></table></figure>
</li>
<li><p>启动tomcat</p>
<ul>
<li><p>终端执行命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/tomcat/bin/startup.sh</span><br></pre></td></tr></table></figure>
</li>
<li><p>出现成功的提示：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Using CATALINA_BASE:   /usr/<span class="built_in">local</span>/tomcat</span><br><span class="line">Using CATALINA_HOME:   /usr/<span class="built_in">local</span>/tomcat</span><br><span class="line">Using CATALINA_TMPDIR: /usr/<span class="built_in">local</span>/tomcat/temp</span><br><span class="line">Using JRE_HOME:        /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.121-0.b13.el7_3.x86_64</span><br><span class="line">Using CLASSPATH:       /usr/<span class="built_in">local</span>/tomcat/bin/bootstrap.jar:/usr/<span class="built_in">local</span>/tomcat/bin/tomcat-juli.jar</span><br><span class="line">Tomcat started.</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>不能访问tomcat的相关解决办法</p>
<ul>
<li><p>防火墙未开启8080端口，解决如下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost bin]<span class="comment"># firewall-cmd --zone=public --add-port=8080/tcp --permanent</span></span><br><span class="line">[root@localhost bin]<span class="comment"># firewall-cmd --reload</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>服务器未开启安全组</p>
<ul>
<li>在阿里云服务器的控制台添加安全组，自定义tcp。端口设置为8080</li>
</ul>
</li>
</ul>
</li>
</ol>
<h2 id="安装MySql"><a href="#安装MySql" class="headerlink" title="安装MySql"></a>安装MySql</h2><ol>
<li><p>使用wget命令下载mysql(5.7版本)</p>
<ul>
<li><p>先进入<code>/usr/local</code>,然后输入以下命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$wget</span> https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.20-linux-glibc2.12-x86_64.tar.gz</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>解压mysql压缩包，移动到mysql文件夹中</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$tar</span> zxvf mysql-5.7.20-linux-glibc2.12-x86_64.tar.gz</span><br></pre></td></tr></table></figure>
</li>
<li><p>初始化mysql</p>
<ul>
<li><p>新建用户组</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$groupadd</span> mysql</span><br></pre></td></tr></table></figure>
</li>
<li><p>把mysql用户加入到用户组中</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$useradd</span> -r -g mysql mysql</span><br></pre></td></tr></table></figure>
</li>
<li><p>创建目录并授权</p>
  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$mkdir</span> data mysql-file</span><br><span class="line"><span class="variable">$chown</span> -R mysql</span><br><span class="line"><span class="variable">$chgrp</span> -R mysql</span><br></pre></td></tr></table></figure>
</li>
<li><p>初始化</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$bin</span>/mysqld --initialize --user=mysql</span><br></pre></td></tr></table></figure>
<p> 若报错：</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bin/mysqld: error <span class="keyword">while</span> loading shared libraries: libaio.so.1: cannot open shared object file: No such file or directory</span><br></pre></td></tr></table></figure>
<p>解决办法：</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$yum</span> install libaio</span><br></pre></td></tr></table></figure>
</li>
<li><p>临时密钥：root@localhost后内容edDd9RjTV6%i</p>
</li>
<li><p>生成RSA密钥</p>
</li>
<li><p>授予独写权限</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$chown</span> -R root .</span><br><span class="line"><span class="variable">$chown</span> -R mysql data mysql-files</span><br></pre></td></tr></table></figure>
</li>
<li><p>添加到Mysql启动脚本到系统服务</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$cp</span> support-files/mysql.server /etc/init.d/mysql.server</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>启动MySql服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$service</span> mysql.server start</span><br></pre></td></tr></table></figure>

<p>若报错：</p>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">mysqld_safe <span class="keyword">error</span>: <span class="built_in">log</span>-<span class="keyword">error</span> <span class="keyword">set</span> <span class="keyword">to</span> '/var/<span class="built_in">log</span>/mariadb/mariadb.<span class="built_in">log</span>', however <span class="built_in">file</span> don't exists. Create writable <span class="keyword">for</span> user 'mysql'.</span><br><span class="line">The server quit <span class="keyword">without</span> updating PID <span class="built_in">file</span> (/var/lib/mysql/i[FAILED]<span class="number">50</span>wj90m4drpoxZ.pid).</span><br></pre></td></tr></table></figure>

<p> 解决：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$mkdir</span> /var/<span class="built_in">log</span>/mariadb</span><br><span class="line"><span class="variable">$touch</span> /var/<span class="built_in">log</span>/mariadb/mariadb.log</span><br><span class="line"><span class="variable">$chown</span> -R mysql:mysql /var/<span class="built_in">log</span>/mariadb</span><br></pre></td></tr></table></figure>
</li>
<li><p>登录MySQL，密码是3中的密码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/mysql/bin/mysql -uroot -p</span><br></pre></td></tr></table></figure>

<p> 若报错：</p>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">Can't connect <span class="keyword">to</span> <span class="keyword">local</span> MySQL server <span class="keyword">through</span> socket '/tmp/mysql.sock'</span><br></pre></td></tr></table></figure>

<p>解决办法：修改<code>/etc/my.cnf</code></p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"><span class="attr">datadir</span>=/var/lib/mysql</span><br><span class="line"><span class="comment">#socket=/var/lib/mysql/mysql.sock</span></span><br><span class="line"><span class="attr">socket</span>=/tmp/mysql.sock</span><br></pre></td></tr></table></figure>

<ul>
<li>再次登录,密码同上<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$service</span> mysql.server start</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>设置MySQL密码</p>
 <figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">mysql&gt; <span class="keyword">set</span> <span class="keyword">password</span>=<span class="keyword">password</span>(<span class="string">'123456'</span>);</span><br><span class="line"> Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected, <span class="number">1</span> <span class="built_in">warning</span> (<span class="number">0.00</span> sec)/</span><br><span class="line"> mysql&gt; flush <span class="keyword">privileges</span>;</span><br></pre></td></tr></table></figure>
<p> Query OK, 0 rows affected (0.01 sec)<br> mysql&gt; exit;<br> Bye</p>
 <figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line">    </span><br><span class="line"><span class="number">7</span>. 再次登录</span><br><span class="line">   ```<span class="keyword">bash </span></span><br><span class="line">   $/usr/local/mysql/<span class="keyword">bin/mysql </span>-uroot -p</span><br></pre></td></tr></table></figure>
</li>
<li><p>授予权限，记得刷新权限。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> *.* <span class="keyword">TO</span> <span class="string">'root'</span>@<span class="string">'%'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'root'</span> <span class="keyword">WITH</span> <span class="keyword">GRANT</span> <span class="keyword">OPTION</span>;<span class="keyword">FLUSH</span> <span class="keyword">PRIVILEGES</span>;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h2 id="打包web项目"><a href="#打包web项目" class="headerlink" title="打包web项目"></a>打包web项目</h2><ol>
<li><p>先修改jdbc.properties文件的url 为下面的。将192.168.44.128换成服务器ip</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">url=<span class="string">jdbc:</span><span class="string">mysql:</span><span class="comment">//192.168.44.128:3306/further?useUnicode=yes&amp;characterEncoding=utf8</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Project-&gt;Artifacts-&gt;增加webApplication:Exploded 选在项目基础上</p>
</li>
<li><p>Project-&gt;Artifacts-&gt;增加webApplication:Archive 选在2的基础上</p>
</li>
<li><p>发现有Create Manifest的提示。点击，默认创建即可。然后点击apply和ok</p>
</li>
<li><p>重新build项目。Build-&gt;Build Artifacts-&gt;All Artifacts-&gt;build</p>
</li>
<li><p>创建好后进入项目文件夹out/artifacts/项目名_war/</p>
</li>
<li><p>将.war文件传至服务器的/usr/locol/tomcat/webapps下。进入服务器后重启tomcat会自动解压</p>
</li>
<li><p>访问http://服务器ip:8080/项目名</p>
</li>
</ol>
<p>这个时候所写的项目已成功部署，可以通过访问了。</p>
]]></content>
      <categories>
        <category>Java web</category>
      </categories>
      <tags>
        <tag>Java Web</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown基本语法</title>
    <url>/posts/markdown-programmer.html</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><ul>
<li><p>Markdown是什么？</p>
<p> Markdown是一种轻量级标记语言，它以纯文本形式(易读、易写、易更改)编写文档，并最终以HTML格式发布。<br>Markdown也可以理解为将以MARKDOWN语法编写的语言转换成HTML内容的工具。</p>
</li>
</ul>
<a id="more"></a>

<h2 id="1-标题"><a href="#1-标题" class="headerlink" title="1. 标题"></a><strong>1. 标题</strong></h2><p>在想要设为标题的文字前加#，一个#是一级标题，两个#是二级标题，以此类推，共支持六级标题。<br><strong>注意：</strong>标准语法需要在#后加一个空格。</p>
<p>示例：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 一级标题</span></span><br><span class="line"><span class="section">## 二级标题</span></span><br><span class="line"><span class="section">### 三级标题</span></span><br><span class="line"><span class="section">#### 四级标题</span></span><br><span class="line"><span class="section">##### 五级标题</span></span><br><span class="line"><span class="section">###### 六级标题</span></span><br></pre></td></tr></table></figure>
<p>效果如下：</p>
<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h2 id="2-字体"><a href="#2-字体" class="headerlink" title="2. 字体"></a><strong>2. 字体</strong></h2><p><strong>1. 加粗</strong></p>
<p>要加粗的文字左右分别加<strong>2</strong>个*</p>
<p><strong>2. 斜体</strong></p>
<p>要倾斜的文字左右分别加<strong>1</strong>个*</p>
<p><strong>3. 斜体加粗</strong></p>
<p>要倾斜和加粗的文字左右分部加<strong>3</strong>个* </p>
<p><strong>4. 删除线</strong></p>
<p>要加删除线的文字左右分别加<strong>2</strong>个~</p>
<p>示例：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="strong">**文字加粗**</span></span><br><span class="line"><span class="emphasis">*文字倾斜*</span></span><br><span class="line"><span class="strong">***文字加粗倾斜**</span>*</span><br><span class="line">~~文字加删除线~~</span><br></pre></td></tr></table></figure>
<p>效果如下：<br><strong>文字加粗</strong><br><em>文字倾斜</em><br><strong><em>文字加粗倾斜</em></strong><br><del>文字加删除线</del></p>
<h2 id="3-引用"><a href="#3-引用" class="headerlink" title="3. 引用"></a><strong>3. 引用</strong></h2><p>在引用的文字前面加&gt;即可。引用可以嵌套。</p>
<p>示例：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="quote">&gt; 愈艰难，就愈要做。改革，想来是没有一帆风顺的。 -鲁迅</span></span><br><span class="line">&gt;&gt; 读书应自己思索，自己做主。 -鲁迅</span><br></pre></td></tr></table></figure>
<p>效果如下：</p>
<blockquote>
<p>愈艰难，就愈要做。改革，想来是没有一帆风顺的。 -鲁迅</p>
<blockquote>
<p>读书应自己思索，自己做主。 -鲁迅</p>
</blockquote>
</blockquote>
<h2 id="4-分割线"><a href="#4-分割线" class="headerlink" title="4. 分割线"></a><strong>4. 分割线</strong></h2><p>三个以上的-或者*<br>示例：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">----</span><br><span class="line"><span class="emphasis">***</span></span><br><span class="line"><span class="emphasis">***</span>*</span><br></pre></td></tr></table></figure>
<h2 id="效果如下："><a href="#效果如下：" class="headerlink" title="效果如下："></a>效果如下：</h2><hr>
<hr>
<hr>
<h2 id="5-图片"><a href="#5-图片" class="headerlink" title="5. 图片"></a><strong>5. 图片</strong></h2><p>语法：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">图片下方文字</span>](<span class="link">图片地址 "图片标题"</span>)</span><br><span class="line">[]内填的文字等于对图片内容的解释，图片标题当鼠标移到图片上时会显示内容，可加可不加</span><br></pre></td></tr></table></figure>
<p>示例：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">i love markdown</span>](<span class="link">https://cn.bing.com/th?id=OIP.KLvPfJ6Ui3cZQd4Zj17kJgHaE8&amp;pid=Api&amp;rs=1 "Bing photo"</span>)</span><br></pre></td></tr></table></figure>

<p>效果如下：<br><img src="http://mikemclin.net/mmwp/wp-content/uploads/2013/03/markdown-syntax-language.png" alt="i love markdown" title="Bing photo"></p>
<p><strong>6. 超链接</strong></p>
<p>语法：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">超链接名</span>](<span class="link">超链接地址"超链接标题"</span>)</span><br><span class="line">标题可加可不加</span><br></pre></td></tr></table></figure>

<p>示例：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">markdown语法说明</span>](<span class="link">http://www.markdown.cn/"语法说明"</span>)</span><br><span class="line">[<span class="string">Google</span>](<span class="link">google.com"Google"</span>)</span><br><span class="line">标题可加可不加</span><br></pre></td></tr></table></figure>

<p>效果如下：<br><a href="http://www.markdown.cn/" target="_blank" rel="noopener"语法说明"">markdown语法说明</a></p>
<p><a href="google.com"Google"">Google</a></p>
<h2 id="7-列表"><a href="#7-列表" class="headerlink" title="7. 列表"></a><strong>7. 列表</strong></h2><ul>
<li>无序列表</li>
</ul>
<p>语法：</p>
<p>无序列表用 -  + * 任何一个都可以</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1. </span>- 列表内容</span><br><span class="line"><span class="bullet">2. </span>+ 列表内容</span><br><span class="line"><span class="bullet">3. </span>* 列表内容</span><br><span class="line"><span class="strong">**注意**</span> - 符号后需要有一个空格</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<ul>
<li>列表内容</li>
</ul>
<ul>
<li>列表内容</li>
</ul>
<ul>
<li>列表内容</li>
</ul>
<ul>
<li>有序列表</li>
</ul>
<p>语法：数字加点</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1. </span>列表内容</span><br><span class="line"><span class="bullet">2. </span>列表内容</span><br><span class="line"><span class="bullet">3. </span>列表内容</span><br><span class="line"><span class="strong">**注意:**</span> 序号后需要一个空格。回车会自动增加序号</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<ol>
<li>列表内容</li>
<li>列表内容</li>
<li>列表内容</li>
</ol>
<ul>
<li>列表嵌套</li>
</ul>
<p><strong>上一级和下一级之间加三个空格即可</strong><br>语法：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">- </span>一级无序列表</span><br><span class="line"><span class="bullet">   - </span>二级无序列表 </span><br><span class="line"><span class="bullet">   - </span>二级无序列表</span><br><span class="line"><span class="bullet">   - </span>二级无序列表</span><br><span class="line"><span class="bullet">- </span>一级无序列表</span><br><span class="line"><span class="bullet">   - </span>二级无序列表</span><br><span class="line"><span class="bullet">   - </span>二级无序列表</span><br><span class="line"><span class="bullet">      - </span>三级无序列表</span><br><span class="line"><span class="bullet">      - </span>三级无序列表</span><br><span class="line"></span><br><span class="line"><span class="bullet">1. </span>一级有序列表</span><br><span class="line"><span class="bullet">   1. </span>二级有序列表</span><br><span class="line"><span class="bullet">   2. </span>二级有序列表</span><br><span class="line"><span class="code">      1.三级有序列表</span></span><br></pre></td></tr></table></figure>
<p>效果如下：</p>
<ul>
<li>一级无序列表<ul>
<li>二级无序列表 </li>
<li>二级无序列表</li>
<li>二级无序列表</li>
</ul>
</li>
<li>一级无序列表<ul>
<li>二级无序列表</li>
<li>二级无序列表<ul>
<li>三级无序列表</li>
<li>三级无序列表</li>
</ul>
</li>
</ul>
</li>
</ul>
<ol>
<li>一级有序列表<ol>
<li>二级有序列表</li>
<li>二级有序列表<ol>
<li>三级有序列表</li>
</ol>
</li>
</ol>
</li>
</ol>
<h2 id="8-表格"><a href="#8-表格" class="headerlink" title="8. 表格"></a><strong>8. 表格</strong></h2><p>语法：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">表头|表头|表头</span><br><span class="line">---|:--:|--:</span><br><span class="line">内容|内容|内容</span><br><span class="line">内容|内容|内容</span><br><span class="line"></span><br><span class="line"><span class="bullet">- </span>文字默认居左</span><br><span class="line"><span class="bullet">- </span>两边加:表示居中</span><br><span class="line"><span class="bullet">- </span>右边加:表示居右</span><br></pre></td></tr></table></figure>
<p>示例：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">| 时间 | 周日 | 周一 | 周二 | 周三 | 周四 | 周五 | 周六 |</span><br><span class="line">| ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- |</span><br><span class="line">| 6:00 | 休息 |   数 | 数   | 数   | 数   | 数   | 休息 |</span><br><span class="line">| 8:00 | 休息 |   数 | 数   | 数   | 数   | 数   | 休息 |</span><br></pre></td></tr></table></figure>
<p>效果如下：</p>
<table>
<thead>
<tr>
<th>时间</th>
<th>周日</th>
<th>周一</th>
<th>周二</th>
<th>周三</th>
<th>周四</th>
<th>周五</th>
<th>周六</th>
</tr>
</thead>
<tbody><tr>
<td>6:00</td>
<td>休息</td>
<td>数</td>
<td>数</td>
<td>数</td>
<td>数</td>
<td>数</td>
<td>休息</td>
</tr>
<tr>
<td>8:00</td>
<td>休息</td>
<td>数</td>
<td>数</td>
<td>数</td>
<td>数</td>
<td>数</td>
<td>休息</td>
</tr>
</tbody></table>
<h2 id="9-代码"><a href="#9-代码" class="headerlink" title="9. 代码"></a><strong>9. 代码</strong></h2><p>语法：</p>
<p>单行代码：代码两边各一个单引号</p>
<p><code>$rm -rf /*</code></p>
<p>代码块：代码两边各三个单引号</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h2 id="10-待办"><a href="#10-待办" class="headerlink" title="10. 待办"></a><strong>10. 待办</strong></h2><p>语法：<br>-空格[空格]空格 代办事项<br>-空格[x]空格 已完成事项<br>示例：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">- </span>[ ] 吃饭</span><br><span class="line"><span class="bullet">- </span>[x] 学习</span><br></pre></td></tr></table></figure>
<p>效果如下：</p>
<ul>
<li><input disabled="" type="checkbox"> 吃饭</li>
<li><input checked="" disabled="" type="checkbox"> 学习</li>
</ul>
]]></content>
      <tags>
        <tag>markdown</tag>
      </tags>
  </entry>
</search>
